* IOS 개발중 내용 정리 

** <2018-02-25 일>

Autolayout constraint 코드로 직접 적용할때 유의할사항 

- addSubview() 이후에 constraint를 걸도록 하자 
- 대상뷰의 translatesAutoresizingMaskIntoConstraints 속성을 false로 세팅한뒤 constraint를 걸어야 제대로 동작한다. 
- 당연한 이야기지만 x축중앙, y축중앙정렬로 세팅하려는경우에는 width, height constraint를 설정해야 제대로 동작함

** <2018-02-19 월>

IOS Simulator에서 아래와 같은 오류가 나온다면 

Pseudo Terminal Setup Error 
- https://stackoverflow.com/questions/48128652/pseudo-terminal-setup-error-when-running-ios-simulator

그저 xcode를 종료하고 나면 나아진다. 

** <2018-01-31 수> 

Design document 
*** ScrollView zooming and  Paging 

- 줌 대상뷰는 모든 페이지를 담고 있는 컨테이너뷰라야한다. 
- container view 의 scale 이 변한뒤 scrollview 의 panning gesture는 미세하게 다뤄져야한다. 
  - panning 시 상하좌우경계로 못넘어가도록 방어코드 처리 
  - dragging 시에는 상하경계로 방어코드처리 
    - 단, 좌우로는 width의 10%(변할수 있음) dragging 이 가능하도록 
    - 이 행동을 보고 페이지이동 처리를 한다. 

여러가지 테스트를 거친뒤 결론이 났는데.. 

- private api gesture recognizer자체는 손을 안대는 편이 낫다. 왜냐하면 기본 페이징 동작과, 스크롤 액션 자체가 그 recognizer에 들어있기때문.. -ㅅ-; 
- 결국 Nested scrollview를 이용하면 아주 깔끔하게 해결이 된다.
  - https://developer.apple.com/library/content/documentation/WindowsViews/Conceptual/UIScrollView_pg/NestedScrollViews/NestedScrollViews.html#//apple_ref/doc/uid/TP40008179-CH7-SW3
  - 문서는 한참봤는데 왜 이게 눈에 안들어왔지.. 


** <2018-01-19 금> 

*** 지문 / pin code 인증처리 

LocalAuthentication framework 추가 

#+BEGIN_SRC swift
  import LocalAuthentication

  func viewDidLoad() {
      let c = LAContext()
      var authError: NSError?
      func executePolicy(_ v:LAPolicy)  {
          c.evaluatePolicy(v, localizedReason: "호호호 인증해", reply: { (success, e) in
                                                                    print("\(success) \(String(describing: e))")
                                                                })
      }
      if c.canEvaluatePolicy(.deviceOwnerAuthenticationWithBiometrics, error: &authError) {
          executePolicy(.deviceOwnerAuthenticationWithBiometrics)
      } else if c.canEvaluatePolicy(.deviceOwnerAuthentication, error: &authError) {
          executePolicy(.deviceOwnerAuthentication)
      }

  }
#+END_SRC

** <2018-01-16 화>

*** Core Bluetooth apple pencil detect 

선행작업 - framework - Core Bluetooth 미리 추가해둘것

특이한점으로 apple pencil uuid가 "180A" 라는 문자로 초기화되어있다는.. 

#+BEGIN_SRC swift 
  import CoreBluetooth
  import UIKit

  class SampleController: UIViewController {
      var centralManager:CBCentralManager? = nil
      override func viewDidLoad() {
          self.centralManager = CBCentralManager.init(delegate: self, queue: nil)
          self.centralManager?.scanForPeripherals(withServices: nil, options: nil)
      }
  }

  extension SampleController: CBCentralManagerDelegate {
      func centralManagerDidUpdateState(_ central: CBCentralManager) {
          let applePencilConnected = central.state == .poweredOn && self.centralManager?.retrieveConnectedPeripherals(withServices: [CBUUID.init(string: "180A")])
            .first(where: { $0.name == "Apple Pencil"}) != nil
          print("apple pencil => \(applePencilConnected)")
      }

      func centralManager(_ central: CBCentralManager, didDisconnectPeripheral peripheral: CBPeripheral, error: Error?) {
      }
      func centralManager(_ central: CBCentralManager, didConnect peripheral: CBPeripheral) {
      }
      func centralManager(_ central: CBCentralManager, didDiscover peripheral: CBPeripheral, advertisementData: [String : Any], rssi RSSI: NSNumber) {
          print("BLE 찾았넹.. \(String(describing: peripheral.name))")
      }
  }

#+END_SRC

** <2018-01-12 금>

*** CGAffineTransform -> CATransform3D 변환 

#+BEGIN_SRC swift
  let l = CAShapeLayer()
  let p = UIBezierPath(rect: CGRect(origin:CGPoint(x:20, y:200), size:CGSize(width: 100, height: 100)))

  let transform = CGAffineTransform.identity
    .translatedBy(x: 0, y: 0)
    .scaledBy(x: 1, y: 1)

  p.fill()
  l.fillColor = UIColor.darkGray.cgColor
  l.path = p.cgPath
  l.contentsGravity = kCAGravityCenter
  l.contentsScale = UIScreen.main.scale
  l.transform = CATransform3DMakeAffineTransform(transform)

#+END_SRC

*** Xcode - storyboard에서 RGB HEX 값 입력 

[[https://i.stack.imgur.com/9TP3v.png]]

